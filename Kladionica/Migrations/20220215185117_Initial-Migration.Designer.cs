// <auto-generated />
using System;
using Kladionica.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Kladionica.Migrations
{
    [DbContext(typeof(KladionicaContext))]
    [Migration("20220215185117_Initial-Migration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Kladionica.Models.Entity_Models.Drzava", b =>
                {
                    b.Property<int>("DrzavaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("DrzavaCode")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar");

                    b.HasKey("DrzavaId");

                    b.HasIndex("DrzavaCode")
                        .IsUnique();

                    b.ToTable("Drzave");
                });

            modelBuilder.Entity("Kladionica.Models.Entity_Models.Klub", b =>
                {
                    b.Property<int>("KlubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("DrzavaId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pol")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)")
                        .HasDefaultValue("M");

                    b.Property<int>("SportId")
                        .HasColumnType("int");

                    b.HasKey("KlubId");

                    b.HasIndex("DrzavaId");

                    b.HasIndex("SportId");

                    b.ToTable("Klubovi");
                });

            modelBuilder.Entity("Kladionica.Models.Entity_Models.Liga", b =>
                {
                    b.Property<int>("LigaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("DrzavaId")
                        .HasColumnType("int");

                    b.Property<byte>("LigaCode")
                        .HasColumnType("tinyint");

                    b.Property<string>("Pol")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)")
                        .HasDefaultValue("M");

                    b.HasKey("LigaId");

                    b.HasIndex("DrzavaId");

                    b.ToTable("Lige");
                });

            modelBuilder.Entity("Kladionica.Models.Entity_Models.Par", b =>
                {
                    b.Property<int>("ParId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("KlubDrugiId")
                        .HasColumnType("int");

                    b.Property<int>("KlubPrviId")
                        .HasColumnType("int");

                    b.Property<int>("LigaId")
                        .HasColumnType("int");

                    b.Property<int>("SinglId")
                        .HasColumnType("int");

                    b.HasKey("ParId");

                    b.HasIndex("KlubDrugiId");

                    b.HasIndex("KlubPrviId");

                    b.HasIndex("LigaId");

                    b.HasIndex("SinglId")
                        .IsUnique();

                    b.ToTable("Parovi");
                });

            modelBuilder.Entity("Kladionica.Models.Entity_Models.Singl", b =>
                {
                    b.Property<int>("SinglId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Dobitan")
                        .HasColumnType("bit");

                    b.Property<decimal>("Kvota")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParId")
                        .HasColumnType("int");

                    b.Property<decimal>("ReferentnaKvota")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Suma")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TiketId")
                        .HasColumnType("int");

                    b.HasKey("SinglId");

                    b.HasIndex("TiketId");

                    b.ToTable("Singlovi");
                });

            modelBuilder.Entity("Kladionica.Models.Entity_Models.Sport", b =>
                {
                    b.Property<int>("SportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SportCode")
                        .HasColumnType("int");

                    b.HasKey("SportId");

                    b.HasIndex("SportCode")
                        .IsUnique();

                    b.ToTable("Sportovi");
                });

            modelBuilder.Entity("Kladionica.Models.Entity_Models.Tiket", b =>
                {
                    b.Property<int>("TikedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("Suma")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TikedId");

                    b.ToTable("Tiketi");
                });

            modelBuilder.Entity("Kladionica.Models.Entity_Models.Klub", b =>
                {
                    b.HasOne("Kladionica.Models.Entity_Models.Drzava", "Drzava")
                        .WithMany("Klubovi")
                        .HasForeignKey("DrzavaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kladionica.Models.Entity_Models.Sport", "Sport")
                        .WithMany("Klubovi")
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drzava");

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("Kladionica.Models.Entity_Models.Liga", b =>
                {
                    b.HasOne("Kladionica.Models.Entity_Models.Drzava", "Drzava")
                        .WithMany("Lige")
                        .HasForeignKey("DrzavaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drzava");
                });

            modelBuilder.Entity("Kladionica.Models.Entity_Models.Par", b =>
                {
                    b.HasOne("Kladionica.Models.Entity_Models.Klub", "KlubDrugi")
                        .WithMany("ParoviDrugi")
                        .HasForeignKey("KlubDrugiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kladionica.Models.Entity_Models.Klub", "KlubPrvi")
                        .WithMany("ParoviPrvi")
                        .HasForeignKey("KlubPrviId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kladionica.Models.Entity_Models.Liga", "Liga")
                        .WithMany("Parovi")
                        .HasForeignKey("LigaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kladionica.Models.Entity_Models.Singl", "Singl")
                        .WithOne("Par")
                        .HasForeignKey("Kladionica.Models.Entity_Models.Par", "SinglId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KlubDrugi");

                    b.Navigation("KlubPrvi");

                    b.Navigation("Liga");

                    b.Navigation("Singl");
                });

            modelBuilder.Entity("Kladionica.Models.Entity_Models.Singl", b =>
                {
                    b.HasOne("Kladionica.Models.Entity_Models.Tiket", "Tiket")
                        .WithMany("Singlovi")
                        .HasForeignKey("TiketId");

                    b.Navigation("Tiket");
                });

            modelBuilder.Entity("Kladionica.Models.Entity_Models.Drzava", b =>
                {
                    b.Navigation("Klubovi");

                    b.Navigation("Lige");
                });

            modelBuilder.Entity("Kladionica.Models.Entity_Models.Klub", b =>
                {
                    b.Navigation("ParoviDrugi");

                    b.Navigation("ParoviPrvi");
                });

            modelBuilder.Entity("Kladionica.Models.Entity_Models.Liga", b =>
                {
                    b.Navigation("Parovi");
                });

            modelBuilder.Entity("Kladionica.Models.Entity_Models.Singl", b =>
                {
                    b.Navigation("Par");
                });

            modelBuilder.Entity("Kladionica.Models.Entity_Models.Sport", b =>
                {
                    b.Navigation("Klubovi");
                });

            modelBuilder.Entity("Kladionica.Models.Entity_Models.Tiket", b =>
                {
                    b.Navigation("Singlovi");
                });
#pragma warning restore 612, 618
        }
    }
}
